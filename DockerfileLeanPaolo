FROM --platform=$BUILDPLATFORM mcr.microsoft.com/dotnet/sdk:7.0 AS builder

ARG TARGETPLATFORM
ARG BUILDPLATFORM
RUN echo "I am running on $BUILDPLATFORM, building for $TARGETPLATFORM"

RUN apt update && \
    apt install -y git

WORKDIR /SRC

RUN git clone -b custom https://github.com/PaoloOranges/Lean.Brokerages.CoinbasePro.git CoinbaseBrokerage
COPY . ./Lean

ARG COINBASE_BROKERAGE_PROJECT_PATH=/SRC/CoinbaseBrokerage/QuantConnect.CoinbaseBrokerage/QuantConnect.CoinbaseBrokerage.csproj
ARG LEAN_PROJECT_PATH=/SRC/Lean/Launcher/QuantConnect.Lean.Launcher.csproj

WORKDIR /BUILD

RUN dotnet publish $COINBASE_BROKERAGE_PROJECT_PATH -c Release -o LeanPlugins
RUN dotnet publish $LEAN_PROJECT_PATH -c Release -o Bin

FROM mcr.microsoft.com/dotnet/runtime:6.0

ARG TARGETPLATFORM
ARG BUILDPLATFORM
RUN echo "I am running on $BUILDPLATFORM, building for $TARGETPLATFORM"

WORKDIR /Lean

COPY --from=builder /BUILD/LeanPlugins/QuantConnect.CoinbaseBrokerage.* /Lean/LeanPlugins/
COPY --from=builder /BUILD/Bin /Lean/Bin
RUN rm /Lean/Bin/*.pdb
RUN rm /Lean/Bin/*.xml

WORKDIR /Lean/Bin
ENTRYPOINT [ "dotnet", "QuantConnect.Lean.Launcher.dll" ]

# docker run --rm -v "G:\SourceCode\QuantitativeTrading\QuantConnect\Data:/Lean/Data" -v "G:\SourceCode\QuantitativeTrading\QuantConnect\LeanStorage:/Lean/Storage" -v "G:\SourceCode\QuantitativeTrading\QuantConnect\Config:/Lean/Config" temp --config=/Lean/Config/config_paper_coinbase.json